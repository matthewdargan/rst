// Code generated by "stringer -type Type"; DO NOT EDIT.

package scan

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Error-1]
	_ = x[BlankLine-2]
	_ = x[Space-3]
	_ = x[Title-4]
	_ = x[SectionAdornment-5]
	_ = x[Transition-6]
	_ = x[Paragraph-7]
	_ = x[Bullet-8]
	_ = x[Enum-9]
	_ = x[BlockQuote-10]
	_ = x[Attribution-11]
	_ = x[Comment-12]
	_ = x[HyperlinkStart-13]
	_ = x[HyperlinkPrefix-14]
	_ = x[HyperlinkQuote-15]
	_ = x[HyperlinkName-16]
	_ = x[HyperlinkSuffix-17]
	_ = x[HyperlinkURI-18]
	_ = x[InlineReferenceOpen-19]
	_ = x[InlineReferenceText-20]
	_ = x[InlineReferenceClose-21]
}

const _Type_name = "EOFErrorBlankLineSpaceTitleSectionAdornmentTransitionParagraphBulletEnumBlockQuoteAttributionCommentHyperlinkStartHyperlinkPrefixHyperlinkQuoteHyperlinkNameHyperlinkSuffixHyperlinkURIInlineReferenceOpenInlineReferenceTextInlineReferenceClose"

var _Type_index = [...]uint8{0, 3, 8, 17, 22, 27, 43, 53, 62, 68, 72, 82, 93, 100, 114, 129, 143, 156, 171, 183, 202, 221, 241}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
